{"version":3,"sources":["themes/GlobalStyle.js","themes/Themes.js","components/utils/Toggler.js","components/Header.js","components/Footer.js","components/game/Card.js","components/utils/util.js","components/game/CardCollection.js","components/game/Scores.js","components/utils/LoadingSpinner.js","components/Main.js","App.js","components/utils/ToggleFunctionality.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","primaryColor","secondaryColor","lightTheme","darkTheme","Button","styled","button","Toggler","toggleTheme","onClick","HeaderWrapper","header","Span","span","Header","themeToggler","FooterWrapper","footer","Link","a","Footer","href","target","CardWrapper","div","Card","pokemon","src","alt","name","width","fetchPokemons","level","pokemons","numbers","i","number","randomNumberGenerator","push","pokemonUrl","axios","get","id","data","capitalizeFirstLetter","sprites","front_default","string","charAt","toUpperCase","slice","arr","generatedNumber","Math","floor","random","includes","CardCollectionWrapper","CardCollection","progress","useState","cardSequence","setCardSequence","useEffect","trackPromise","then","console","log","sortedArr","sort","length","temp","shuffleArray","map","ScoresWrapper","Scores","score","setScore","highscore","setHighscore","lastHighscore","sessionStorage","getItem","newScore","setItem","SpinnerWrapper","LoadingIndicator","props","usePromiseTracker","area","promiseInProgress","type","color","height","MainWrapper","main","Main","setLevel","setProgress","clickedCards","setClickedCards","e","cardName","parentNode","lastChild","textContent","prevState","currentProgress","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","localTheme","ToggleFunctionality","themeMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e593b02.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n \r\nexport const GlobalStyle = createGlobalStyle`\r\n   *,\r\n   *::before,\r\n   *::after {\r\n       box-sizing: border-box;\r\n       padding: 0;\r\n       margin: 0;\r\n       word-wrap: break-word;\r\n   }\r\n\r\n   html {\r\n       font-size: 62.5%;\r\n       line-height: 1.6;\r\n       min-height: 100%;\r\n   }\r\n\r\n   body {\r\n        background: ${({ theme }) => theme.primaryColor};\r\n        color: ${({ theme }) => theme.secondaryColor};\r\n        font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n        transition: all 0.50s linear;\r\n        font-size: 1.6rem;\r\n   }\r\n\r\n   header {\r\n       font-size: 2.4rem;\r\n   }\r\n\r\n   h1,\r\n   h2,\r\n   h3,\r\n   h4,\r\n   h5,\r\n   h6 {\r\n       line-height: 1.2;\r\n   }\r\n\r\n   a {\r\n       text-decoration: none;\r\n   }\r\n\r\n   img {\r\n       display: block;\r\n       width: 100%;\r\n   }\r\n`;","export const lightTheme = {\r\n    primaryColor: '#FFF',\r\n    secondaryColor: '#363537',\r\n}\r\nexport const darkTheme = {\r\n    primaryColor: '#363537',\r\n    secondaryColor: '#FAFAFA',\r\n}","import React from 'react'\r\nimport { func, string } from 'prop-types';\r\nimport styled from \"styled-components\"\r\n\r\nconst Toggler = ({ theme, toggleTheme }) => {\r\n    return(\r\n        <Button onClick={toggleTheme}>\r\n            {theme}\r\n        </Button>\r\n    );\r\n};\r\nToggler.propTypes = {\r\n    theme: string.isRequired,\r\n    toggleTheme: func.isRequired\r\n};\r\n\r\nconst Button = styled.button`\r\n    background: ${({ theme }) => theme.secondaryColor};\r\n    border: 2px solid ${({ theme }) => theme.primaryColor};\r\n    color: ${({ theme }) => theme.primaryColor};\r\n    border-radius: 30px;\r\n    cursor: pointer;\r\n    font-size:0.8rem;\r\n    padding: 0.6rem;\r\n    width: 55px;\r\n    height: 35px;\r\n`;\r\n\r\nexport default Toggler;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Toggler from \"./utils/Toggler\";\r\nimport { GiAce } from \"react-icons/gi\";\r\n\r\nconst Header = ({theme, themeToggler}) => {\r\n    return(\r\n        <HeaderWrapper>\r\n            <Span>\r\n                <GiAce />\r\n                <h3>Memory Card Game</h3>\r\n            </Span>\r\n            <Toggler theme={theme} toggleTheme={themeToggler} />\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n    height: 8vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.secondaryColor};\r\n`;\r\n\r\nconst Span = styled.span`\r\n    display: flex;\r\n    & > h3{\r\n        margin-left: 1rem;\r\n    }\r\n`;\r\n\r\nexport default Header;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <FooterWrapper>\r\n            <p>Created by vladudenis</p>\r\n            <Link href=\"https://github.com/vladudenis\" target=\"_blank\">\r\n                <FaGithub />\r\n            </Link>\r\n        </FooterWrapper>\r\n    );\r\n};\r\n\r\nconst FooterWrapper = styled.footer`\r\n    padding: 5px;\r\n    position: relative;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.secondaryColor};\r\n    color: ${({ theme }) => theme.primaryColor};\r\n`;\r\n\r\nconst Link = styled.a`\r\n    position: relative;\r\n    margin-left: 1rem;\r\n    color: ${({ theme }) => theme.primaryColor};\r\n    &:hover {\r\n        color: gray;\r\n    }\r\n    &:active {\r\n        color: darkgray;\r\n    }\r\n`;\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = ({ onClick, pokemon }) => {\r\n    return(\r\n        <CardWrapper onClick={onClick}>\r\n            <img src={pokemon.src} alt={pokemon.name} width=\"400px\"></img>\r\n            <p>{pokemon.name}</p>\r\n        </CardWrapper>\r\n    );\r\n};\r\n\r\nconst CardWrapper = styled.div`\r\n    margin: 5px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n    justify-content: center;\r\n    border: 1px solid ${({ theme }) => theme.secondaryColor};\r\n    max-width: 300px;\r\n    border-radius: 10px;\r\n    & img{\r\n        width: 300px;\r\n        border-radius: 10px;\r\n    }\r\n    & p{\r\n        text-align: center;\r\n    }\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default Card;","import axios from \"axios\";\r\n\r\nexport const shuffleArray = (arr) => {\r\n    let sortedArr = [...arr].sort(() => Math.random() - 0.5);\r\n    for(let i = 0; i < arr.length; i = i + 2){\r\n        if(arr[i] == sortedArr[i]){\r\n            if(i !== sortedArr.length - 1){\r\n                const temp = sortedArr[i];\r\n                sortedArr[i] = sortedArr[i + 1];\r\n                sortedArr[i + 1] = temp;\r\n            }else{\r\n                const temp = sortedArr[i];\r\n                sortedArr[i] = sortedArr[i - 1];\r\n                sortedArr[i - 1] = temp;\r\n            }\r\n        }\r\n    }\r\n    return sortedArr;\r\n};\r\n\r\nexport const fetchPokemons = async (level) => {\r\n    let pokemons = [];\r\n    let numbers = []; \r\n    \r\n    for(let i = 0; i < level + 5; i++){\r\n        const number = randomNumberGenerator(numbers);\r\n        numbers.push(number);\r\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${number}`\r\n        const pokemon = await axios.get(pokemonUrl);\r\n        const id = pokemon.data.id;\r\n        const name = capitalizeFirstLetter(pokemon.data.name);\r\n        const src = pokemon.data.sprites.front_default;\r\n        pokemons.push({ src, name, id });\r\n    }\r\n\r\n    return pokemons;\r\n};\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconst randomNumberGenerator = (arr) => {\r\n    let generatedNumber = Math.floor(Math.random() * 490 + 1);\r\n    while(arr.includes(generatedNumber)){\r\n        generatedNumber = Math.floor(Math.random() * 490 + 1);\r\n    }\r\n    return generatedNumber;\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { fetchPokemons, shuffleArray } from \"../utils/util\";\r\nimport styled from \"styled-components\"\r\nimport { trackPromise } from 'react-promise-tracker'\r\n\r\nconst CardCollection = ({ onClick, level, progress }) => {\r\n    const [cardSequence, setCardSequence] = useState([]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(\r\n            fetchPokemons(level).then((pokemons) =>\r\n                setCardSequence(pokemons)\r\n        ));\r\n        console.log(cardSequence);\r\n    }, [level])\r\n\r\n    useEffect(() => {\r\n        setCardSequence(shuffleArray(cardSequence));\r\n        console.log(\"Shuffled\");\r\n    }, [progress]);\r\n\r\n    return(\r\n        <CardCollectionWrapper>\r\n            {cardSequence.map((pokemon) => {\r\n                return(\r\n                    <Card key={pokemon.id} onClick={onClick} pokemon={pokemon} />\r\n                );\r\n            })}\r\n        </CardCollectionWrapper>\r\n    );\r\n};\r\n\r\nconst CardCollectionWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    margin: 20px 0;\r\n`;\r\n\r\nexport default CardCollection;","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Scores = ({ level, progress }) => {\r\n    const [score, setScore] = useState(0);\r\n    const [highscore, setHighscore] = useState(0);\r\n\r\n    useEffect(() => { //+5 score on every correct card click\r\n        if(progress == 0){\r\n            setScore(0);\r\n            const lastHighscore = sessionStorage.getItem(\"highscore\");\r\n            if(lastHighscore){\r\n                setHighscore(lastHighscore);\r\n            }else{\r\n                setHighscore(0);\r\n            }\r\n        }else{\r\n            const newScore = score + 5;\r\n            if(highscore < newScore){\r\n                setHighscore(newScore);\r\n                sessionStorage.setItem(\"highscore\", newScore);\r\n            }\r\n            setScore(newScore);\r\n        }\r\n    }, [progress]);\r\n\r\n    useEffect(() => { //+15 score on every level up\r\n        if(level == 1){\r\n            setScore(0);\r\n            const lastHighscore = sessionStorage.getItem(\"highscore\");\r\n            if(lastHighscore){\r\n                setHighscore(lastHighscore);\r\n            }else{\r\n                setHighscore(0);\r\n            }\r\n        }else{\r\n            const newScore = score + 15;\r\n            if(highscore < newScore){\r\n                setHighscore(newScore);\r\n                sessionStorage.setItem(\"highscore\", newScore);\r\n            }\r\n            setScore(newScore);\r\n        }\r\n    }, [level]);\r\n\r\n    return(\r\n       <ScoresWrapper>\r\n            <span>\r\n                <h3>Level {level}</h3>\r\n            </span>\r\n            <span>\r\n                <p>Highscore: {highscore}</p>\r\n                <p>Score: {score}</p>\r\n            </span>\r\n       </ScoresWrapper>\r\n    );\r\n};\r\n\r\nconst ScoresWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport default Scores;\r\n\r\n{/* <h3>Notice: This is a fan project</h3>\r\n                <p>Memory Card Game was created under Riot Games' \"Legal Jibber Jabber\" policy using assets owned by Riot Games.  Riot Games does not endorse or sponsor this project.</p> */}","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from \"styled-components\"\r\n\r\nconst LoadingIndicator = (props) => {\r\n    const { promiseInProgress } = usePromiseTracker({area: props.area});\r\n  \r\n    return (\r\n      promiseInProgress &&\r\n      <SpinnerWrapper>\r\n        <Loader type=\"TailSpin\" color=\"black\" height=\"100\" width=\"100\" />\r\n      </SpinnerWrapper>\r\n    );\r\n  }\r\n  \r\n  const SpinnerWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100;\r\n    margin-bottom: 300px;\r\n  `;\r\n\r\n  export default LoadingIndicator;","import React, { useState } from \"react\";\r\nimport CardCollection from \"./game/CardCollection\";\r\nimport Scores from \"./game/Scores\";\r\nimport styled from \"styled-components\"\r\nimport LoadingIndicator from \"./utils/LoadingSpinner\";\r\n\r\nconst Main = () => {\r\n    const [level, setLevel] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n    const [clickedCards, setClickedCards] = useState([]);\r\n\r\n    const madeProgress = (e) => {\r\n        const cardName = e.target.parentNode.lastChild.textContent;\r\n        if(clickedCards.includes(cardName)){\r\n            setLevel(1);\r\n            setProgress(0);\r\n            setClickedCards([]);\r\n        }else{\r\n            setClickedCards((prevState) => [...prevState, cardName]);\r\n            const currentProgress = progress + 1;\r\n            setProgress(currentProgress);\r\n            console.log(\"Progress Made\", currentProgress + \"/\" + (level + 5));\r\n            if(currentProgress == level + 5){ //level one has a set of 6 cards\r\n                setLevel(level + 1);\r\n                setProgress(0);\r\n                setClickedCards([]);\r\n                if(level === 100){\r\n                    return( //show the winner a pikachu picture\r\n                        <MainWrapper>\r\n                            <Scores level={100} progress={0} />\r\n                        </MainWrapper>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <MainWrapper>\r\n            <Scores level={level} progress={progress} />\r\n            <LoadingIndicator/>\r\n            <CardCollection onClick={madeProgress} level={level} progress={progress} />\r\n        </MainWrapper>\r\n    );\r\n};\r\n\r\nconst MainWrapper = styled.main`\r\n    min-height: 90vh;\r\n    display: grid;\r\n    justify-content: center;\r\n    margin: 20px;\r\n`;\r\n\r\nexport default Main;","import React from \"react\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport { GlobalStyle } from \"./themes/GlobalStyle\";\r\nimport { lightTheme, darkTheme } from \"./themes/Themes\";\r\nimport { ToggleFunctionality } from \"./components/utils/ToggleFunctionality\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Main from \"./components/Main\";\r\n\r\nconst App = () => {\r\n  const [theme, themeToggler, mountedComponent] = ToggleFunctionality();\r\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\r\n\r\n  if(!mountedComponent) return <div />\r\n  return(\r\n    <ThemeProvider theme={themeMode}>\r\n      <GlobalStyle />\r\n      <Header theme={theme} themeToggler={themeToggler} />\r\n      <Main />\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import { useEffect, useState } from \"react\";\r\n\r\nexport const ToggleFunctionality = () => {\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const [mountedComponent, setMountedComponent] = useState(false);\r\n\r\n    const themeToggler = () => {\r\n        theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n    };\r\n\r\n    const setMode = (mode) => {\r\n        window.localStorage.setItem(\"theme\", mode);\r\n        setTheme(mode);\r\n    };\r\n\r\n    useEffect (() => {\r\n        const localTheme = window.localStorage.getItem(\"theme\");\r\n        localTheme ? setTheme(localTheme) : setMode(\"light\");\r\n        setMountedComponent(true);\r\n    }, []);\r\n\r\n    return [theme, themeToggler, mountedComponent];\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}