{"version":3,"sources":["themes/GlobalStyle.js","themes/Themes.js","components/utils/Toggler.js","components/Header.js","components/Footer.js","components/game/Card.js","components/utils/util.js","components/game/CardCollection.js","components/game/Scores.js","components/utils/LoadingSpinner.js","components/Main.js","App.js","components/utils/ToggleFunctionality.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","primaryColor","secondaryColor","lightTheme","darkTheme","Button","styled","button","Toggler","toggleTheme","onClick","HeaderWrapper","header","Span","span","Header","themeToggler","FooterWrapper","footer","Link","a","Footer","href","target","CardWrapper","div","Card","pokemon","src","alt","name","width","randomNumberGenerator","arr","generatedNumber","Math","floor","random","includes","fetchPokemons","level","pokemons","numbers","i","number","push","pokemonUrl","axios","get","id","data","string","charAt","toUpperCase","slice","sprites","front_default","CardCollectionWrapper","CardCollection","progress","useState","cardSequence","setCardSequence","useEffect","trackPromise","then","console","log","array","sort","map","ScoresWrapper","Scores","score","setScore","highscore","setHighscore","newScore","SpinnerWrapper","LoadingIndicator","props","usePromiseTracker","area","promiseInProgress","type","color","height","MainWrapper","main","Main","setLevel","setProgress","clickedCards","setClickedCards","e","cardName","parentNode","lastChild","textContent","prevState","currentProgress","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","ToggleFunctionality","themeMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc27a40.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n \nexport const GlobalStyle = createGlobalStyle`\n   *,\n   *::before,\n   *::after {\n       box-sizing: border-box;\n       padding: 0;\n       margin: 0;\n       word-wrap: break-word;\n   }\n\n   html {\n       font-size: 62.5%;\n       line-height: 1.6;\n       min-height: 100%;\n   }\n\n   body {\n        background: ${({ theme }) => theme.primaryColor};\n        color: ${({ theme }) => theme.secondaryColor};\n        font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n        transition: all 0.50s linear;\n        font-size: 1.6rem;\n   }\n\n   header {\n       font-size: 2.4rem;\n   }\n\n   h1,\n   h2,\n   h3,\n   h4,\n   h5,\n   h6 {\n       line-height: 1.2;\n   }\n\n   a {\n       text-decoration: none;\n   }\n\n   img {\n       display: block;\n       width: 100%;\n   }\n`;","export const lightTheme = {\n    primaryColor: '#FFF',\n    secondaryColor: '#363537',\n}\nexport const darkTheme = {\n    primaryColor: '#363537',\n    secondaryColor: '#FAFAFA',\n}","import React from 'react'\nimport { func, string } from 'prop-types';\nimport styled from \"styled-components\"\n\nconst Toggler = ({ theme, toggleTheme }) => {\n    return(\n        <Button onClick={toggleTheme}>\n            {theme}\n        </Button>\n    );\n};\nToggler.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired\n};\n\nconst Button = styled.button`\n    background: ${({ theme }) => theme.secondaryColor};\n    border: 2px solid ${({ theme }) => theme.primaryColor};\n    color: ${({ theme }) => theme.primaryColor};\n    border-radius: 30px;\n    cursor: pointer;\n    font-size:0.8rem;\n    padding: 0.6rem;\n    width: 55px;\n    height: 35px;\n`;\n\nexport default Toggler;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Toggler from \"./utils/Toggler\";\nimport { GiAce } from \"react-icons/gi\";\n\nconst Header = ({theme, themeToggler}) => {\n    return(\n        <HeaderWrapper>\n            <Span>\n                <GiAce />\n                <h3>Memory Card Game</h3>\n            </Span>\n            <Toggler theme={theme} toggleTheme={themeToggler} />\n        </HeaderWrapper>\n    );\n};\n\nconst HeaderWrapper = styled.header`\n    height: 8vh;\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.secondaryColor};\n`;\n\nconst Span = styled.span`\n    display: flex;\n    & > h3{\n        margin-left: 1rem;\n    }\n`;\n\nexport default Header;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaGithub } from \"react-icons/fa\";\n\nconst Footer = () => {\n    return(\n        <FooterWrapper>\n            <p>Created by vladudenis</p>\n            <Link href=\"https://github.com/vladudenis\" target=\"_blank\">\n                <FaGithub />\n            </Link>\n        </FooterWrapper>\n    );\n};\n\nconst FooterWrapper = styled.footer`\n    padding: 5px;\n    position: relative;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({ theme }) => theme.secondaryColor};\n    color: ${({ theme }) => theme.primaryColor};\n`;\n\nconst Link = styled.a`\n    position: relative;\n    margin-left: 1rem;\n    color: ${({ theme }) => theme.primaryColor};\n    &:hover {\n        color: gray;\n    }\n    &:active {\n        color: darkgray;\n    }\n`;\n\nexport default Footer;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Card = ({ onClick, pokemon }) => {\n    return(\n        <CardWrapper onClick={onClick}>\n            <img src={pokemon.src} alt={pokemon.name} width=\"400px\"></img>\n            <p>{pokemon.name}</p>\n        </CardWrapper>\n    );\n};\n\nconst CardWrapper = styled.div`\n    margin: 5px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n    justify-content: center;\n    border: 1px solid ${({ theme }) => theme.secondaryColor};\n    max-width: 300px;\n    border-radius: 10px;\n    & img{\n        width: 300px;\n        border-radius: 10px;\n    }\n    & p{\n        text-align: center;\n    }\n`;\n\nexport default Card;","import axios from \"axios\";\n\nconst capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nconst randomNumberGenerator = (arr) => {\n    let generatedNumber = Math.floor(Math.random() * 490 + 1);\n    while(arr.includes(generatedNumber)){\n        generatedNumber = Math.floor(Math.random() * 490 + 1);\n    }\n    return generatedNumber;\n};\n\nexport const shuffleArray = (array) => {\n    return [...array].sort(() => Math.random() - 0.5)\n};\n\nexport const fetchPokemons = async (level) => {\n    let pokemons = [];\n    let numbers = []; \n    \n    for(let i = 0; i < level + 5; i++){\n        const number = randomNumberGenerator(numbers);\n        numbers.push(number);\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${number}`\n        const pokemon = await axios.get(pokemonUrl);\n        const id = pokemon.data.id;\n        const name = capitalizeFirstLetter(pokemon.data.name);\n        const src = pokemon.data.sprites.front_default;\n        pokemons.push({ src, name, id });\n    }\n\n    return pokemons;\n};","import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { fetchPokemons, shuffleArray } from \"../utils/util\";\nimport styled from \"styled-components\"\nimport { trackPromise } from 'react-promise-tracker'\n\nconst CardCollection = ({ onClick, level, progress }) => {\n    const [cardSequence, setCardSequence] = useState([]);\n\n    useEffect(() => {\n        trackPromise(\n            fetchPokemons(level).then((pokemons) =>\n                setCardSequence(pokemons)\n        ));\n        console.log(cardSequence);\n    }, [level])\n\n    useEffect(() => {\n        setCardSequence(shuffleArray(cardSequence));\n        console.log(\"Shuffled\");\n    }, [progress]);\n\n    return(\n        <CardCollectionWrapper>\n            {cardSequence.map((pokemon) => {\n                return(\n                    <Card key={pokemon.id} onClick={onClick} pokemon={pokemon} />\n                );\n            })}\n        </CardCollectionWrapper>\n    );\n};\n\nconst CardCollectionWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    margin: 20px 0;\n`;\n\nexport default CardCollection;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\n\nconst Scores = ({ level, progress }) => {\n    const [score, setScore] = useState(0);\n    const [highscore, setHighscore] = useState(0);\n\n    useEffect(() => {\n        if(progress == 0){\n            setScore(0);\n        }else{\n            const newScore = score + 5;\n            if(highscore < newScore){\n                setHighscore(newScore);\n            }\n            setScore(newScore);\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if(level == 1){\n            setScore(0);\n            setHighscore(0);\n        }else{\n            const newScore = score + 15;\n            if(highscore < newScore){\n                setHighscore(newScore);\n            }\n            setScore(newScore);\n        }\n    }, [level]);\n\n    return(\n       <ScoresWrapper>\n            <span>\n                <h3>Level {level}</h3>\n            </span>\n            <span>\n                <p>Highscore: {highscore}</p>\n                <p>Score: {score}</p>\n            </span>\n       </ScoresWrapper>\n    );\n};\n\nconst ScoresWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport default Scores;\n\n{/* <h3>Notice: This is a fan project</h3>\n                <p>Memory Card Game was created under Riot Games' \"Legal Jibber Jabber\" policy using assets owned by Riot Games.  Riot Games does not endorse or sponsor this project.</p> */}","import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\nimport styled from \"styled-components\"\n\nconst LoadingIndicator = (props) => {\n    const { promiseInProgress } = usePromiseTracker({area: props.area});\n  \n    return (\n      promiseInProgress &&\n      <SpinnerWrapper>\n        <Loader type=\"TailSpin\" color=\"black\" height=\"100\" width=\"100\" />\n      </SpinnerWrapper>\n    );\n  }\n  \n  const SpinnerWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100;\n    margin-bottom: 300px;\n  `;\n\n  export default LoadingIndicator;","import React, { useState } from \"react\";\nimport CardCollection from \"./game/CardCollection\";\nimport Scores from \"./game/Scores\";\nimport styled from \"styled-components\"\nimport LoadingIndicator from \"./utils/LoadingSpinner\";\n\nconst Main = () => {\n    const [level, setLevel] = useState(1);\n    const [progress, setProgress] = useState(0);\n    const [clickedCards, setClickedCards] = useState([]);\n\n    const madeProgress = (e) => {\n        const cardName = e.target.parentNode.lastChild.textContent;\n        if(clickedCards.includes(cardName)){\n            setLevel(1);\n            setProgress(0);\n            setClickedCards([]);\n        }else{\n            setClickedCards((prevState) => [...prevState, cardName]);\n            const currentProgress = progress + 1;\n            setProgress(currentProgress);\n            console.log(\"Progress Made\", currentProgress + \"/\" + (level + 5));\n            if(currentProgress == level + 5){\n                setLevel(level + 1);\n                setProgress(0);\n                setClickedCards([]);\n            }\n        } \n    }\n\n    return(\n        <MainWrapper>\n            <Scores level={level} progress={progress} />\n            <LoadingIndicator/>\n            <CardCollection onClick={madeProgress} level={level} progress={progress} />\n        </MainWrapper>\n    );\n};\n\nconst MainWrapper = styled.main`\n    min-height: 90vh;\n    display: grid;\n    justify-content: center;\n    margin: 20px;\n`;\n\nexport default Main;","import React from \"react\";\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyle } from \"./themes/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./themes/Themes\";\nimport { ToggleFunctionality } from \"./components/utils/ToggleFunctionality\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Main from \"./components/Main\";\n\nconst App = () => {\n  const [theme, themeToggler, mountedComponent] = ToggleFunctionality();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if(!mountedComponent) return <div />\n  return(\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyle />\n      <Header theme={theme} themeToggler={themeToggler} />\n      <Main />\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default App;","import { useEffect, useState } from \"react\";\n\nexport const ToggleFunctionality = () => {\n    const [theme, setTheme] = useState(\"light\");\n    const [mountedComponent, setMountedComponent] = useState(false);\n\n    const themeToggler = () => {\n        theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\n    };\n\n    const setMode = (mode) => {\n        window.localStorage.setItem(\"theme\", mode);\n        setTheme(mode);\n    };\n\n    useEffect (() => {\n        const localTheme = window.localStorage.getItem(\"theme\");\n        localTheme ? setTheme(localTheme) : setMode(\"light\");\n        setMountedComponent(true);\n    }, []);\n\n    return [theme, themeToggler, mountedComponent];\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}